import org.json.JSONObject

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

static def releaseAppName() {
    return "Crawler"
}

static def loadProperties() {
    def propsFile = new File('./local.properties')
    Properties properties = new Properties()
    properties.load(new FileInputStream(propsFile))
    return properties
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId rootProject.packageName
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        def configFile = new File('config.json')
        def json = new JSONObject(configFile.text)
        buildConfigField "int", "API_VERSION", "${json.getInt("versionCode")}"
        buildConfigField "String", "API_HOST", "\"${json.getString("crawler_host")}\""
        buildConfigField "String", "API_HOST2", "\"${json.getString("crawler_host2")}\""
        buildConfigField "String", "API_HOST3", "\"${json.getString("crawler_host3")}\""
        buildConfigField "String", "API_HOST4", "\"${json.getString("crawler_host4")}\""
    }

    dataBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    def properties = loadProperties()

    signingConfigs {
        r {
            storeFile file(properties['storeFile'])
            storePassword properties['storePassword']
            keyAlias properties['keyAlias']
            keyPassword properties['keyPassword']
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.r
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.r
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.each { output ->
                def abi = output.getFilter('ABI') ?: "universal"
                output.outputFileName = "${releaseAppName()}_${abi}.apk"
            }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/beans.xml'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "com.google.android.material:material:$materialLibraryVersion"

    implementation project(':Violet')
    implementation project(':Player')
    implementation 'org.jsoup:jsoup:1.13.1'
    implementation "com.squareup.okhttp3:okhttp:$okhttpLibraryVersion"
    implementation "com.github.bumptech.glide:glide:$glideLibraryVersion"
    implementation 'com.liulishuo.okdownload:okdownload:1.0.7'
    implementation 'com.liulishuo.okdownload:okhttp:1.0.7'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'
    implementation 'org.fourthline.cling:cling-support:2.1.1'
    implementation "org.eclipse.jetty:jetty-server:$jettyLibraryVersion"
    implementation "org.eclipse.jetty:jetty-servlet:$jettyLibraryVersion"
    implementation "org.eclipse.jetty:jetty-client:$jettyLibraryVersion"
    implementation 'com.airbnb.android:lottie:5.0.3'

    testImplementation 'junit:junit:4.13'
}
